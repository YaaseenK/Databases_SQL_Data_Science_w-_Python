-- SQLite Database Queries

-- CREATE statement
CREATE TABLE PETSALE (
    ID INTEGER NOT NULL,
    PET CHAR(20),
    SALEPRICE DECIMAL(6,2),
    PROFIT DECIMAL(6,2),
    SALEDATE DATE
);

CREATE TABLE PET (
    ID INTEGER NOT NULL,
    ANIMAL VARCHAR(20),
    QUANTITY INTEGER
);

-- INSERT statement
INSERT INTO PETSALE VALUES
    (1, 'Cat', 450.09, 100.47, '2018-05-29'),
    (2, 'Dog', 666.66, 150.76, '2018-06-01'),
    (3, 'Parrot', 50.00, 8.9, '2018-06-04'),
    (4, 'Hamster', 60.60, 12, '2018-06-11'),
    (5, 'Goldfish', 48.48, 3.5, '2018-06-14');

INSERT INTO PET VALUES
    (1, 'Cat', 3),
    (2, 'Dog', 4),
    (3, 'Hamster', 2);

SELECT * FROM PETSALE;
SELECT * FROM PET;

-- ALTER statement [ADD, DELETE, OR MODIFY COLUMNS]

-- 1. Adding a column
ALTER TABLE PETSALE ADD COLUMN QUANTITY INTEGER;

SELECT * FROM PETSALE;

-- UPDATE THE NEWLY ADDED COLUMN OF PETSALE TABLE
UPDATE PETSALE SET QUANTITY = 9 WHERE ID = 1;
UPDATE PETSALE SET QUANTITY = 3 WHERE ID = 2;
UPDATE PETSALE SET QUANTITY = 2 WHERE ID = 3;
UPDATE PETSALE SET QUANTITY = 6 WHERE ID = 4;
UPDATE PETSALE SET QUANTITY = 24 WHERE ID = 5;

SELECT * FROM PETSALE;

-- 2. Deleting a column (SQLite does not support DROP COLUMN directly)
-- Workaround: Create a new table without the PROFIT column
CREATE TABLE PETSALE_NEW (
    ID INTEGER PRIMARY KEY,
    PET VARCHAR(20),
    SALEDATE DATE,
    SALEPRICE DECIMAL(6,2)
);

INSERT INTO PETSALE_NEW (ID, PET, SALEDATE, SALEPRICE)
SELECT ID, PET, SALEDATE, SALEPRICE FROM PETSALE;

DROP TABLE PETSALE;
ALTER TABLE PETSALE_NEW RENAME TO PETSALE;

SELECT * FROM PETSALE;

-- 3. Modify a column (SQLite does not support MODIFY COLUMN directly)
-- Workaround: Create a new table with the updated column type
CREATE TABLE PETSALE_NEW (
    ID INTEGER PRIMARY KEY,
    PET VARCHAR(20),
    SALEDATE DATE,
    SALEPRICE DECIMAL(6,2)
);

INSERT INTO PETSALE_NEW (ID, PET, SALEDATE, SALEPRICE)
SELECT ID, PET, SALEDATE, SALEPRICE FROM PETSALE;

DROP TABLE PETSALE;
ALTER TABLE PETSALE_NEW RENAME TO PETSALE;

SELECT * FROM PETSALE;

-- 4. Rename a Column (SQLite does not support CHANGE COLUMN directly)
-- Workaround: Create a new table with the renamed column
CREATE TABLE PETSALE_NEW (
    ID INTEGER PRIMARY KEY,
    ANIMAL VARCHAR(20),
    SALEDATE DATE,
    SALEPRICE DECIMAL(6,2)
);

INSERT INTO PETSALE_NEW (ID, ANIMAL, SALEDATE, SALEPRICE)
SELECT ID, PET, SALEDATE, SALEPRICE FROM PETSALE;

DROP TABLE PETSALE;
ALTER TABLE PETSALE_NEW RENAME TO PETSALE;

SELECT * FROM PETSALE;

-- TRUNCATE statement (SQLite does not support TRUNCATE TABLE)
-- Alternative: Use DELETE FROM to remove all rows
DELETE FROM PET;

SELECT * FROM PET;

-- If You Want to Reset AUTOINCREMENT Counter
DELETE FROM PET;
DELETE FROM sqlite_sequence WHERE name='PET';

-- If You Want a True TRUNCATE Effect
DROP TABLE PETSALE;
CREATE TABLE PETSALE (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    PET VARCHAR(20),
    SALEDATE DATE,
    SALEPRICE DECIMAL(6,2)
);

-- DROP statement - Delete existing table
DROP TABLE PET;

SELECT * FROM PET;
